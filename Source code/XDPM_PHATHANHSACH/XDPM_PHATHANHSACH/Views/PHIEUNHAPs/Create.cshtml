@model XDPM_PHATHANHSACH.Models.PHIEUNHAP_CTPHIEUNHAP
@{
    ViewBag.Title = "Tạo phiếu nhập";
    Layout = "~/Views/Shared/_LayoutSBAdmin.cshtml";
    if (ViewBag.KNhapSach == 1)
    {
        <script>
            alert("Vui lòng nhập thông tin sách cần nhập!")
        </script>
    }
}

<h2>Tạo phiếu nhập</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Thông tin cơ bản</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.pn.MANXB, "Mã NXB", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("pn.MANXB", (SelectList)ViewBag.MANXB, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.pn.MANXB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pn.NGAYNHAP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pn.NGAYNHAP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pn.NGAYNHAP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pn.NGUOIGIAO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pn.NGUOIGIAO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pn.NGUOIGIAO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Tổng tiền </label>
            <div class="col-md-10">
                <input class="form-control" type="text" id="tongtien" name="pn.TONGTIEN" value="0" readonly />
            </div>
        </div>


    </div>

    <h4>Thông tin chi tiết</h4>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2"> Mã Sách</label>
            <div class="col-md-10">
                @Html.DropDownList("MASACH", null, htmlAttributes: new { @class = "form-control", @id = "item" ,@onchange = "MASACH_SOLUONG();" })
                @Html.ValidationMessageFor(model => model.ctpn.MASACH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ctpn.GIA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GIA", null, htmlAttributes: new { @class = "form-control", @id = "gia", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.ctpn.GIA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ctpn.SOLUONG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ctpn.SOLUONG, new { htmlAttributes = new { @class = "form-control", @id = "amount", @Value = 0 } })
                @Html.ValidationMessageFor(model => model.ctpn.SOLUONG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnThemsach" value="Thêm sách" onclick="inRow()" class="btn btn-default" />
            </div>
        </div>
    </div>

    <table class="table" id="chitiet">
        <tr>
            <th>
                Thứ tự
            </th>
            <th>
                Mã Sách
            </th>
            <th>
                Tên Sách
            </th>
            <th>
                Giá
            </th>
            <th>
                Số lượng
            </th>
            <th>
                Thành tiền
            </th>
            <th></th>
        </tr>
    </table>
    <div class="form-inline">
        <div class="col-md-offset-10">
            <input type="button" onclick="XoaBang()" value="Làm mới" class="btn btn-default" />
            <input type="submit" onclick="SuaTongTien()" value="Tạo phiếu" class="btn btn-default" />
        </div>
    </div>

}

<script>
    var dynamicID = 0
    var x = [];
    var tongtien = 0;
    var gia = 0;

    window.onload = function () {
        gia = parseInt($("#gia option:selected").text())
        $("#gia option:selected").text(gia.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
    };

    function inRow() {
        for (i = 0; i < x.length; i++) {
            if ($('#item').val() == x[i]) {
                return alert("Quyển này đã được nhập! Vui lòng chọn quyển khác!");
            }
        }

        x.push($('#item').val());

        dynamicID += 1;
        $("#chitiet").append('<input type="hidden" name="[' + (dynamicID - 1) + '].MASACH" value="' + $('#item').val() + '" />' +
                              '<input type="hidden" name="[' + (dynamicID - 1) + '].SOLUONG" value="' + $('#amount').val() + '" />' +
                              '<input type="hidden" name="[' + (dynamicID - 1) + '].GIA" value="' + gia + '" />');

        $('#chitiet').append(
        "<tr>" +
        "<td>" + dynamicID + "</td>" +
        "<td>" + $('#item').val() + "</td> " +
        "<td>" + $("#item option:selected").text() + "</td>" +
        "<td>" + gia.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) + "</td>" +
        "<td>" + $('#amount').val() + "</td>" +
        "<td>" + (gia * $('#amount').val()).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) + "</td>")

        tongtien = tongtien + $('#amount').val() * gia;
        document.getElementById("tongtien").value = tongtien.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }

    function XoaBang() {
        document.getElementById("chitiet").innerHTML = "<tr> <th>Thứ tự</th><th>Mã Sách</th><th>Tên Sách</th><th>Số lượng</th></tr>";
        dynamicID = 0;
        x = [];

        tongtien = 0;
        document.getElementById("tongtien").value = 0;
    }

    function MASACH_SOLUONG() {
        $("#gia option:selected").text(gia);
        document.getElementById("gia").value = $('#item').val();
        gia = parseInt($("#gia option:selected").text())
        $("#gia option:selected").text(gia.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));

        document.getElementById("amount").value = 0;
    };

    function SuaTongTien() {
        document.getElementById("tongtien").value = tongtien;
    }
</script>

